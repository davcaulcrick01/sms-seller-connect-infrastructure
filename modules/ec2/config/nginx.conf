events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=5r/s;

    # Upstream definitions
    upstream sms_backend {
        server sms_backend:8900;
    }

    upstream sms_frontend {
        server sms_frontend:8082;
    }

    upstream health_check {
        server health_check_service:8888;
    }

    # Future upstreams (uncomment when ready)
    # upstream carrental_backend {
    #     server carrental_backend:3001;
    # }
    
    # upstream carrental_frontend {
    #     server carrental_frontend:3000;
    # }

    # ALB Health Check Endpoint
    server {
        listen 80;
        server_name _;

        location /alb-health {
            access_log off;
            
            # Primary health check endpoint
            proxy_pass http://health_check/health-check;
            proxy_connect_timeout 10s;
            proxy_read_timeout 10s;
            proxy_send_timeout 10s;
            
            # If health check service is down, return unhealthy
            error_page 502 503 504 = @health_check_failed;
        }
        
        # Fallback health check endpoint
        location /health {
            access_log off;
            proxy_pass http://health_check/status;
            proxy_connect_timeout 5s;
            proxy_read_timeout 5s;
            proxy_send_timeout 5s;
            
            error_page 502 503 504 = @health_check_failed;
        }
        
        location @health_check_failed {
            return 503 '{"status": "unhealthy", "reason": "health check service unavailable", "timestamp": "$time_iso8601"}';
            add_header Content-Type application/json;
        }
    }

    # SMS API Server (api.sms.greyzoneapps.com)
    server {
        listen 80;
        server_name api.sms.typerelations.com;

        # Rate limiting for API
        limit_req zone=api burst=20 nodelay;

        # Proxy settings
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;

        # CORS Configuration for API
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control, Pragma, Expires, X-API-Key' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Max-Age' '3600' always;

        # Handle preflight OPTIONS requests - simplified approach
        # Note: Complex CORS handling can be added later if needed
        
        # Handle OPTIONS requests for CORS preflight
        location / {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control, Pragma, Expires, X-API-Key' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' '3600' always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' '0' always;
                return 204;
            }
            
            proxy_pass http://sms_backend;
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
        }

        # Health check
        location /health {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control, Pragma, Expires, X-API-Key' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' '3600' always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' '0' always;
                return 204;
            }
            proxy_pass http://sms_backend/health;
        }
    }

    # SMS Frontend Server (sms.greyzoneapps.com)
    server {
        listen 80;
        server_name sms.typerelations.com;

        # Rate limiting for frontend
        limit_req zone=general burst=10 nodelay;

        # Proxy settings
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;

        # CORS Configuration for Frontend (more permissive for static assets)
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;

        # Frontend routes
        location / {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' '3600' always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' '0' always;
                return 204;
            }
            
            proxy_pass http://sms_frontend;
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
        }

        # Static assets caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            proxy_pass http://sms_frontend;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # Future: Car Rental API Server (uncomment when ready)
    # server {
    #     listen 80;
    #     server_name ${CARRENTAL_API_DOMAIN};
    # 
    #     limit_req zone=api burst=20 nodelay;
    # 
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_redirect off;
    # 
    #     location / {
    #         proxy_pass http://carrental_backend;
    #         proxy_read_timeout 300;
    #         proxy_connect_timeout 300;
    #         proxy_send_timeout 300;
    #     }
    # }

    # Future: Car Rental Frontend Server (uncomment when ready)
    # server {
    #     listen 80;
    #     server_name ${CARRENTAL_FRONTEND_DOMAIN};
    # 
    #     limit_req zone=general burst=10 nodelay;
    # 
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_redirect off;
    # 
    #     location / {
    #         proxy_pass http://carrental_frontend;
    #         proxy_read_timeout 300;
    #         proxy_connect_timeout 300;
    #         proxy_send_timeout 300;
    #     }
    # 
    #     location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
    #         proxy_pass http://carrental_frontend;
    #         expires 1y;
    #         add_header Cache-Control "public, immutable";
    #     }
    # }
} 